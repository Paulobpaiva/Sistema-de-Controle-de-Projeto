#!/usr/bin/env python
"""
Script para redefinir senha de usu√°rio no ambiente local
"""

import os
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project.settings')
django.setup()

from django.contrib.auth.models import User
from activities.models import Worker

def reset_password():
    print("üîê Redefinir Senha - Ambiente Local")
    print("=" * 40)
    
    # Listar usu√°rios dispon√≠veis
    users = User.objects.all()
    print("Usu√°rios dispon√≠veis:")
    for i, user in enumerate(users, 1):
        try:
            worker = user.worker
            print(f"{i}. {user.username} (n√≠vel: {worker.level})")
        except Worker.DoesNotExist:
            print(f"{i}. {user.username} (sem perfil worker)")
    
    # Escolher usu√°rio
    try:
        choice = int(input("\nEscolha o n√∫mero do usu√°rio: ")) - 1
        if 0 <= choice < len(users):
            user = users[choice]
        else:
            print("‚ùå Op√ß√£o inv√°lida!")
            return
    except ValueError:
        print("‚ùå Digite um n√∫mero v√°lido!")
        return
    
    # Definir nova senha
    new_password = input(f"Digite a nova senha para {user.username}: ").strip()
    
    if not new_password:
        print("‚ùå Senha n√£o pode estar vazia!")
        return
    
    try:
        # Redefinir senha
        user.set_password(new_password)
        user.save()
        
        print(f"‚úÖ Senha de {user.username} redefinida com sucesso!")
        print(f"üîë Nova senha: {new_password}")
        print(f"üåê URL local: http://localhost:8000")
        
        # Verificar se tem perfil worker
        try:
            worker = user.worker
            print(f"üë§ Perfil worker: {worker.level}")
        except Worker.DoesNotExist:
            print("‚ö†Ô∏è  Usu√°rio n√£o tem perfil worker - pode ter problemas no sistema")
            
    except Exception as e:
        print(f"‚ùå Erro ao redefinir senha: {e}")

if __name__ == "__main__":
    reset_password() 